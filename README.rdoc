= trackable_tasks

A wrapper for rake tasks that include logging and stats.

= Installation

Add the gem to your gem file.

    gem "trackable_tasks"

Run the install generator and migrate.

    rails generate trackable_tasks:install
    rake db:migrate

There should be a new rake task called trackable_task:run.

= How to use

Create a trackable task.  Override the run method and put the code that needs to be tracked inside.

  class MyTask < TrackableTasks::Base 
    def run 
      log "code with error catching and recovery"
    end 

    def finally
      log "optional code that is called after run finishes"
    end
  end

This creates a new dynamic rake task.  Run the trackable task using either rake task.  The RAILS_ENV can also be specified here.

  rake trackable_task:my_task
  rake trackable_task:run task_name=my_task

The results can be found by looking in:

  TrackableTasks::TaskRun.last

The log_text and error_text methods store logging and error information.  If an exception is generated by the run method, it's message is stored to the error_text, and success is set to false.

= Logging

Log levels can be set when running with a rake task

  rake trackable_task:my_task log_level=notice
  rake trackable_task:run task_name=my_task log_level=error

Setting the log level here determines the highest level of logs that will be saved by the task.  The three log levels are 'error', 'notice', and 'debug'.

- Error: only store error messages; task_run.log_text should not be used
- Notice: store error messages and notice messages; this is the default level
- Debug: store all messages

Inside the script, the log function is used to store data to the task_run logs.

  log("this is an error log", :error)
  log("this is a notice log")
  log("this is a debug log", :debug)

The error level logs write to task_run.log_text.  Notice and debug level logs write to task_run.log_text.

== Contributing to trackable_tasks
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011 Jeremiah Hemphill. See LICENSE.txt for
further details.
